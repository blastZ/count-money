{"version":3,"file":"static/webpack/static/development/pages/index.js.19d2fcf0441d183d824d.hot-update.js","sources":["webpack:///./components/BillList/index.js"],"sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport DayCardTitle from './components/DayCardTitle';\r\nimport BillIcon from './components/BillIcon';\r\n\r\nconst mockData = [\r\n  {\r\n    year: 2019,\r\n    month: 2,\r\n    day: 32,\r\n    data: [\r\n      {\r\n        type: 'expenses',\r\n        category: 'food',\r\n        value: 200\r\n      },\r\n      {\r\n        type: 'income',\r\n        category: 'salary',\r\n        value: 3000\r\n      },\r\n      {\r\n        type: 'expenses',\r\n        category: 'transport',\r\n        value: 100\r\n      },\r\n      {\r\n        type: 'expenses',\r\n        category: 'game',\r\n        value: 200\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    year: 2019,\r\n    month: 3,\r\n    day: 18,\r\n    data: [\r\n      {\r\n        type: 'expenses',\r\n        category: 'movie',\r\n        value: 200\r\n      },\r\n      {\r\n        type: 'income',\r\n        category: 'salary',\r\n        value: 3000\r\n      },\r\n      {\r\n        type: 'expenses',\r\n        category: 'drink',\r\n        value: 100\r\n      },\r\n      {\r\n        type: 'expenses',\r\n        category: 'game',\r\n        value: 200\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst BillList = ({ classes }) => {\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      {mockData\r\n        .sort((a, b) => b.day - a.day)\r\n        .map((day, index) => (\r\n          <Grid key={index} item className={classes.billCardContainer}>\r\n            <DayCard dayCard={day} classes={classes} />\r\n          </Grid>\r\n        ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst DayCard = ({ classes, dayCard }) => (\r\n  <Paper>\r\n    <DayCardTitle dayCard={dayCard} />\r\n    <Divider />\r\n    <List component=\"nav\">\r\n      {dayCard.data.map((o, index) => (\r\n        <ListItem key={index} button>\r\n          <ListItemIcon className={classes.listItemIcon}>\r\n            <BillIcon category={o.category} />\r\n          </ListItemIcon>\r\n          <ListItemText primary={o.category} />\r\n          <ListItemSecondaryAction className={classes.listItemAction}>\r\n            <Typography className={classes.valueText}>{`${o.type === 'income' ? '' : '-'}${o.value}`}</Typography>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  </Paper>\r\n);\r\n\r\nconst styles = theme => ({\r\n  billCardContainer: {\r\n    marginBottom: 16\r\n  },\r\n  listItemIcon: {\r\n    marginRight: 0\r\n  },\r\n  listItemAction: {\r\n    marginRight: 4\r\n  },\r\n  valueText: {\r\n    color: '#5d5d5d'\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(BillList);\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AApBA;AA4BA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AApBA;AACA;AA4BA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAPA;AALA;AACA;AAmBA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAVA;AAAA;AACA;AAcA;;;;A","sourceRoot":""}